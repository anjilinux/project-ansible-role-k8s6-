[Unit]
Description=Kubernetes API Server
Documentation=https://github.com/kubernetes/kubernetes

[Service]
ExecStart=/usr/local/bin/kube-apiserver \
  --advertise-address={{ hostvars[inventory_hostname].inventory_hostname }} \
  --allow-privileged=true \
  --apiserver-count={{ kubernetes.masterNumber }} \
  --audit-log-maxage=30 \
  --audit-log-maxbackup=3 \
  --audit-log-maxsize=100 \
  --audit-log-path=/var/log/audit.log \
  --authorization-mode=Node,RBAC \
  --bind-address=0.0.0.0 \
  --client-ca-file=/var/lib/kubernetes/kubernetes-ca.pem \
  --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \
  --etcd-cafile=/var/lib/kubernetes/etcd-ca.pem \
  --etcd-certfile=/var/lib/kubernetes/kube-apiserver-etcd-client.pem \
  --etcd-keyfile=/var/lib/kubernetes/kube-apiserver-etcd-client-key.pem \
  --etcd-servers={% for node in groups['etcd'] %}https://{{ node }}:2379{% if not loop.last %},{% endif %}{% endfor %} \
  --event-ttl=1h \
  --encryption-provider-config=/var/lib/kubernetes/encryption-config.yml \
  --kubelet-certificate-authority=/var/lib/kubernetes/kubernetes-ca.pem \
  --kubelet-client-certificate=/var/lib/kubernetes/kube-apiserver-kubelet-client.pem \
  --kubelet-client-key=/var/lib/kubernetes/kube-apiserver-kubelet-client-key.pem \
  --runtime-config='api/all=true' \
{% if kubernetes.addonsComponents.oidc.enabled %}
{% if kubernetes.addonsComponents.oidc.issuerURL %}
{% if kubernetes.addonsComponents.oidc.clientID %}
  --oidc-issuer-url={{ kubernetes.addonsComponents.oidc.issuerURL }} \
  --oidc-client-id={{ kubernetes.addonsComponents.oidc.clientID }} \
{% endif %}
{% if kubernetes.addonsComponents.oidc.groupsClaim %}
  --oidc-groups-claim={{ kubernetes.addonsComponents.oidc.groupsClaim }} \
{% endif %}
{% if kubernetes.addonsComponents.oidc.usernameClaim %}
  --oidc-username-claim={{ kubernetes.addonsComponents.oidc.usernameClaim }} \
{% endif %}
{% if kubernetes.addonsComponents.oidc.groupsPrefix %}
  --oidc-groups-prefix={{ kubernetes.addonsComponents.oidc.groupsPrefix }} \
{% endif %}
{% if kubernetes.addonsComponents.oidc.usernamePrefix %}
  --oidc-username-prefix={{ kubernetes.addonsComponents.oidc.usernamePrefix }} \
{% endif %}
{% endif %}
{% endif %}
{% if kubernetes.addonsComponents.metricsServer.enabled %}
  --proxy-client-cert-file=/var/lib/kubernetes/front-proxy-client.pem \
  --proxy-client-key-file=/var/lib/kubernetes/front-proxy-client-key.pem \
  --requestheader-client-ca-file=/var/lib/kubernetes/kubernetes-front-proxy-ca.pem \
  --requestheader-extra-headers-prefix=X-Remote-Extra- \
  --requestheader-group-headers=X-Remote-Group \
  --requestheader-username-headers=X-Remote-User \
{% endif %}

  --service-account-key-file=/var/lib/kubernetes/kubernetes-service-account-management-ca.pem \
  --service-account-signing-key-file=/var/lib/kubernetes/kubernetes-service-account-management-ca-key.pem \
  --service-account-issuer=https://{{ infrastructure.keepalived.virtualIP }}:6443 \
  --service-cluster-ip-range=10.32.0.0/16 \
  --service-node-port-range=30000-32767 \
  --tls-cert-file=/var/lib/kubernetes/kube-apiserver.pem \
  --tls-private-key-file=/var/lib/kubernetes/kube-apiserver-key.pem \
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
